// Todo Service　を定義する
syntax = "proto3";

package todo.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/kogamitora/todo/gen/todo/v1";

// Todo Status Enum
enum Status {
  STATUS_UNSPECIFIED = 0;
  STATUS_INCOMPLETE = 1;
  STATUS_COMPLETED = 2;
}

// Sort Order Enum
enum SortOrder {
  SORT_ORDER_UNSPECIFIED = 0;
  SORT_ORDER_ASC = 1;
  SORT_ORDER_DESC = 2;
}

// Todo Interface
message Todo {
  int64 id = 1;
  string title = 2;
  string description = 3;
  google.protobuf.Timestamp due_date = 4;
  Status status = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

// Todo Service
service TodoService {
  rpc CreateTodo(CreateTodoRequest) returns (CreateTodoResponse);
  rpc GetTodo(GetTodoRequest) returns (GetTodoResponse);
  rpc UpdateTodo(UpdateTodoRequest) returns (UpdateTodoResponse);
  rpc DeleteTodo(DeleteTodoRequest) returns (DeleteTodoResponse);
  rpc ListTodos(ListTodosRequest) returns (ListTodosResponse);
}

// Request and Response

message CreateTodoRequest {
  string title = 1;
  string description = 2;
  google.protobuf.Timestamp due_date = 3;
}

message CreateTodoResponse {
  Todo todo = 1;
}

message GetTodoRequest {
  int64 id = 1;
}

message GetTodoResponse {
  Todo todo = 1;
}

message UpdateTodoRequest {
  int64 id = 1;
  optional string title = 2;
  optional string description = 3;
  optional google.protobuf.Timestamp due_date = 4;
  optional Status status = 5;
}

message UpdateTodoResponse {
  Todo todo = 1;
}

message DeleteTodoRequest {
  int64 id = 1;
}

message DeleteTodoResponse {
  google.protobuf.Empty message = 1;
}

message ListTodosRequest {
  optional Status status_filter = 1;
  optional SortOrder sort_by_due_date = 2;
}

message ListTodosResponse {
  repeated Todo todos = 1;
}
